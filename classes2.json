[
  {
    "class_name": "Computer Security",
    "class_code": "C S 465",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 324 - Systems Programming"
    ],
    "description": "Introduction to computer security fundamentals: confidentiality, integrity, authentication, and access control. Secret key and public key cryptography, network security protocols, viruses, and fire walls. ",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Computer Vision",
    "class_code": "C S 450",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      " C S 312 - Algorithm Design and Analysis",
      "MATH 213 - Elementary Linear Algebra",
      "MATH 215 - Computational Linear Algebra"
    ],
    "description": "Introduction to fundamental concepts and algorithms of computer vision, including feature extraction, detection, segmentation, registration, recognition, motion, 3D vision, and image understanding. Applies techniques from image processing, geometry, Bayesian methods, optimization, and machine learning to computer vision problems.",
    "when_taught": "Winter"
  },
  {
    "class_name": "Computing Competitions",
    "class_code": "C S 493R",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 240 - Advanced Software Construction"
    ],
    "description": "Students work in teams to prepare for and compete in computer science competitions in areas such as programming, data science, and ethical hacking.",
    "when_taught": "Winter"
  },
  {
    "class_name": "Concepts of Programming Languages",
    "class_code": "C S 330",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Unnamed Rule\n      \n     ",
      "\n      Unnamed Rule\n      \n     ",
      "\n              C S 236 - Discrete Structures\n            ",
      "\n              C S 260 - Web Programming\n            ",
      "\n      Unnamed Rule\n      \n     ",
      "\n              C S 236 - Discrete Structures\n            ",
      "\n              C S 224 - Introduction to Computer Systems\n            ",
      "\n      Unnamed Rule\n      \n     ",
      "\n              MATH 290 - Fundamentals of Mathematics\n            ",
      "\n              C S 235 - Data Structures and Algorithms\n            "
    ],
    "description": "Principles and concepts characterizing high-level computer programming languages, process and data abstration, encapsulation, inheritance, functional programming, logic programming, scanners, and parsers.",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Creating and Managing a Software Business",
    "class_code": "C S 405",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 240 - Advanced Software Construction\n            ",
      "\n              WRTG 316 - Technical Communication\n            "
    ],
    "description": "Entrepreneurship, idea/opportunity generation, strategic planning, legal organization, product development, marketing/sales, customer support, fund raising, and effective management.",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Data Science Capstone 1",
    "class_code": "C S 482",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 240 - Advanced Software Construction\n            ",
      "\n              C S 312 - Algorithm Design and Analysis\n            "
    ],
    "description": "Culminating experience based on skills learned in advanced technical courses. Students work in teams to plan, design, implement, test, and demonstrate a major project.",
    "when_taught": "Fall"
  },
  {
    "class_name": "Data Science Capstone 2",
    "class_code": "C S 483",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 482 - Data Science Capstone 1\n            "
    ],
    "description": "Culminating experience based on skills learned in advanced technical courses. Students work in teams to plan, design, implement, test, and demonstrate a major project.",
    "when_taught": "Winter"
  },
  {
    "class_name": "Data Structures and Algorithms",
    "class_code": "C S 235",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 142 - Introduction to Computer Programming\n            ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 111 - Introduction to Computer Science\n            "
    ],
    "description": "Fundamental data structures and algorithms of computer science; basic algorithm analysis; recursion; sorting and searching; lists, stacks, queues, trees, hashing; object-oriented data abstraction.",
    "when_taught": "Fall, Winter, Spring"
  },
  {
    "class_name": "Database Modeling Concepts",
    "class_code": "C S 452",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 240 - Advanced Software Construction\n            "
    ],
    "description": "Database models:  relational, deductive, object-oriented.  Integrity constraints, query languages, database design.",
    "when_taught": "Fall, Winter, and Spring"
  },
  {
    "class_name": "Discrete Structures",
    "class_code": "C S 236",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 235 - Data Structures and Algorithms\n            "
    ],
    "description": "Introduction to grammars and parsing; predicate and propositional logic; proof techniques; sets, functions, relations, relational data model; graphs and graph algorithms. ",
    "when_taught": "Fall, Winter, Spring"
  },
  {
    "class_name": "Ethics and Computers in Society",
    "class_code": "C S 404",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 240 - Advanced Software Construction\n            "
    ],
    "description": "Societal impact of computer technology, the computer scientist's place in society, ethical issues.  Reading, discussion, and writing seminar.",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Exploring Computer Science",
    "class_code": "C S 191",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Introduction to the discipline of computer science and its fields. Lectures will provide an accessible introduction to the fields of computer science for those who are new to the discipline.",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Fundamentals of Information Retrieval",
    "class_code": "C S 453",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 240 - Advanced Software Construction\n            "
    ],
    "description": "Concepts and terminology of information retrieval (IR) systems.  Design methodologies and issues.  Fundamental IR models examined:  Boolean, Vector Space, Probabilistic models, and evaluation strategies.",
    "when_taught": "Spring Term"
  },
  {
    "class_name": "How to Program",
    "class_code": "C S 110",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Introduction to programming and computer science for those with no prior programming experience. Focuses on the basic aspects of programming, with an emphasis on core principles. Labs provide a supportive environment to learn how to program with peers. Weekly discussions will introduce some of the many ways computer science interacts with society. Programming assignments will demonstrate how to use computing in a variety of disciplines. \\n",
    "when_taught": "Fall, Winter, Spring"
  },
  {
    "class_name": "Interactive Graphics and Image Processing",
    "class_code": "C S 355",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 240 - Advanced Software Construction\n            ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 240 - Advanced Software Construction\n            ",
      "\n              MATH 213 - Elementary Linear Algebra\n            ",
      "\n              MATH 215 - Computational Linear Algebra\n            "
    ],
    "description": "Introduces basic concepts of computer graphics and image processing. Includes characteristics of physical cameras and displays; color models; basic image processing algorithms: 2D and 3D homogeneous coordinate transformations; fundamentals of 3D rendering geometry; lighting and shading: image warping and texture mapping; and frequency-domain processing.",
    "when_taught": "Fall"
  },
  {
    "class_name": "Intermediate Three-Dimensional Computer Graphics",
    "class_code": "CSANM 250",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Fundaments of building three-dimensional computer models and setting up model rigs for mobility.",
    "when_taught": "Fall"
  },
  {
    "class_name": "Introduction to Artificial Intelligence",
    "class_code": "C S 470",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "Expand All",
      "\n                  Prerequisites\n                  \n                 ",
      "\n      Prerequisites\n      \n     ",
      "\n      Prerequisites\n      \n     ",
      "\n              C S 312 - Algorithm Design and Analysis\n            ",
      "\n              MATH 215 - Computational Linear Algebra\n            ",
      "\n              STAT 121 - Introduction to Statistical Data Analysis\n            "
    ],
    "description": "Introduction to core areas of artifical intelligence; intelligent agents, problem solving and search, knowledge-based systems and inference, planning, uncertainty, learning, and perception. ",
    "when_taught": "Fall, Winter, and Spring"
  },
  {
    "class_name": "Introduction to Computational Theory",
    "class_code": "C S 252",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Finite state automata, regular languages, lexical analysis; push-down automata, context-free languages, parsing; Turing machines and unrestricted grammars; computability complexity, NP-completeness.",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Introduction to Computer Programming",
    "class_code": "C S 142",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Introduction to object-oriented program design and development.  Principles of algorithm formulation and implementation.",
    "when_taught": "Contact Department"
  },
  {
    "class_name": "Introduction to Computer Science",
    "class_code": "C S 111",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Teaches how to design, develop, reason about, and test programs. Topics include higher-order functions, object-oriented programming, recursion, algorithms, data structures, decomposition, interpreters, and regular expressions.",
    "when_taught": "All Semesters/Terms"
  }
]