[
  {
    "class_name": "Real-time Techniques",
    "class_code": "CSANM 342",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "This class introduces students to real-time applications. It provides principles foundational for creating video games and other real-time media. Students learn how to mock up basic game mechanics in a realtime engine, such as Unreal Engine, and create basic environments and characters for a real time engine. This is meant to be an introduction to a variety of skills that students can take further and deeper on future projects.",
    "when_taught": "Winter"
  },
  {
    "class_name": "Research Methods and Study Design in Human-Computer Interaction",
    "class_code": "C S 556",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 356 - Advanced Techniques in Human Computer Interaction"
    ],
    "description": "Understand and use qualitative and quantitative methods for human-computer interaction research, such as interviews, observations, surveys, and measurements. Learn to choose study designs, analyze data, and consider ethical implications of involving human participants in research.",
    "when_taught": "Winter"
  },
  {
    "class_name": "Robust Control",
    "class_code": "C S 513",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "MATH 213 - Elementary Linear Algebra",
      "MATH 215 - Computational Linear Algebra"
    ],
    "description": "Introduction to the analysis and design of feedback systems guaranteed to perform well in spite of model uncertainty.",
    "when_taught": "Winter"
  },
  {
    "class_name": "Scripting for Animation",
    "class_code": "CSANM 258",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Developing basic scripting skills to procedurally build intricate systems of models, rigs, and animation.  Students learn how to reduce manual hours and efficiently create simple to complex effects.",
    "when_taught": "Winter"
  },
  {
    "class_name": "Secondary Minor Student Teaching",
    "class_code": "C S 477R",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Supervised, full-day, four week experience to develop and demonstrate competence in teaching minor area course content in the secondary classroom.",
    "when_taught": "Fall, Winter, Spring"
  },
  {
    "class_name": "Software Design",
    "class_code": "C S 340",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 240 - Advanced Software Construction",
      "C S 260 - Web Programming"
    ],
    "description": "Use design, development, testing and refactoring techniques to build and evolve reliable, maintainable and scalable software systems. Covers a wide range of design patterns and principles. Also introduces students to software architecture and architectural patterns.",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Software Engineering",
    "class_code": "C S 428",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 340 - Software Design"
    ],
    "description": "Analysis, design, implementation, and testing of significant software systems.",
    "when_taught": "Contact Department"
  },
  {
    "class_name": "Software Engineering Capstone 1",
    "class_code": "C S 480",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 329 - Testing, Analysis, and Verification",
      "C S 340 - Software Design"
    ],
    "description": "Culminating experience based on skills learned in advanced technical courses. Students work in teams to plan, design, implement, test, and demonstrate a major project.\\n",
    "when_taught": "Fall"
  },
  {
    "class_name": "Software Engineering Capstone 2",
    "class_code": "C S 481",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 480 - Software Engineering Capstone 1"
    ],
    "description": "Culminating experience based on skills learned in advanced technical courses. Students work in teams to plan, design, implement, test, and demonstrate a major project.",
    "when_taught": "Winter"
  },
  {
    "class_name": "Software Engineering Lab 1",
    "class_code": "C S 202",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 142 - Introduction to Computer Programming",
      "C S 111 - Introduction to Computer Science"
    ],
    "description": "The first of three experiential learning labs that will provide students with hands-on experience with various tools, technologies, and techniques that software engineers use in practice. In addition to hands-on lab experiences, this course contains lecture and assigned reading content that will provide an understanding of what a software engineering career is and what roles and responsibilities are available to software engineers. ",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Software Engineering Lab 2",
    "class_code": "C S 203",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 202 - Software Engineering Lab 1",
      "C S 235 - Data Structures and Algorithms"
    ],
    "description": "The second of three experiential learning labs that will provide students with hands-on experience with various tools, technologies, and techniques that software engineers use in practice. The lab experiences in this course build on those learned in CS 202 and focus on tools and techniques for source code testing, automated source code analysis, and source code build and dependency management. ",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Software Engineering Lab 3",
    "class_code": "C S 204",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 203 - Software Engineering Lab 2",
      "C S 240 - Advanced Software Construction"
    ],
    "description": "The third of three experiential learning labs that will provide students with hands-on experience with various tools, technologies, and techniques that software engineers use in practice. The lab experiences in this course build on those learned in CS 202 and CS 203 and focus on tools and techniques for cloud development and Agile programming. ",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Special Problems in Animation",
    "class_code": "CSANM 494R",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Individual study in area of special interest.",
    "when_taught": "Contact Department"
  },
  {
    "class_name": "Special Topics in Advanced Graphics",
    "class_code": "CSANM 453R",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Researching new technologies in animation and visualization.  Topics might include real-time technologies, three-dimensional data acquisition, performance capture, or new entertainment platforms.",
    "when_taught": "Fall"
  },
  {
    "class_name": "Systems Programming",
    "class_code": "C S 324",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 224 - Introduction to Computer Systems"
    ],
    "description": "Systems programming principles and concepts, including Linux systems programming, multiprocessing, concurrency, exceptional control flow, caching, sockets, protocols, and non-blocking I/O.",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Testing, Analysis, and Verification",
    "class_code": "C S 329",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "C S 240 - Advanced Software Construction"
    ],
    "description": "Fundamental challenge of software quality through the entire software product life-cycle. Sound engineering principles to ensure and assure quality at each stage of the life-cycle with an emphasis in early stages on testing techniques, dynamic and static program analysis, and formal verification for high assurance systems. Practical application to software artifacts and algorithm implementation connects the course material to real world application in the field.",
    "when_taught": "Fall and Winter"
  },
  {
    "class_name": "Theory of Predictive Modeling",
    "class_code": "C S 580",
    "class_type": "",
    "emphasis": "",
    "pre_req": [
      "MATH 213 - Elementary Linear Algebra",
      "MATH 215 - Computational Linear Algebra"
    ],
    "description": " Mathematical, computational, and philosophical foundations of machine learning, control, and physical modeling.  Introduction to system identification, causality, uncertainty, model approximation, and information geometry.",
    "when_taught": "Fall"
  },
  {
    "class_name": "Three-Dimensional Visual Effects",
    "class_code": "CSANM 458R",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Exploring procedural and three-dimensional animation methods to create realistic special effects.  Applying a large spectrum of animation principles to integrate their effects aesthetically and convincingly into a live action or animated environment.",
    "when_taught": "Spring Term"
  },
  {
    "class_name": "Topics in Computer Science",
    "class_code": "C S 301R",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Undergraduate-level topics as announced.",
    "when_taught": "Fall"
  },
  {
    "class_name": "Topics in Computer Science",
    "class_code": "C S 401R",
    "class_type": "",
    "emphasis": "",
    "pre_req": [],
    "description": "Undergraduate level subjects as announced before each semester.",
    "when_taught": "Winter"
  }
]